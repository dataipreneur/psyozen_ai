.visualizer-container {
    position: relative;
    width: 100%;
    height: 100%;
  }
  *
{
  font-family: 'Inter Tight';
}
  .glass-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    
    /* semi-transparent white background */
    backdrop-filter: blur(40px); /* Apply the blur effect */
    z-index: 1; /* Ensure it's on top of the canvas */
  }
  
  .visualizer-canvas {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 0; /* Ensure it's behind the glass overlay */
  }
  
  .centered-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 2rem; /* Adjust font size as needed */
    color: black; /* Text color */
    font-weight: bold; /* Font weight */
    /* text-shadow: 0 0 10px rgba(0, 0, 0, 0.5); Optional: add shadow for better visibility */
    z-index: 2; /* Ensure it's on top of the glass overlay */
  }
  
  .centered-text {
    
    color: #5900ff; /* Default color */
    transition: color 0.3s ease;
  }
  
  .centered-text.playing {
    color: #fff; /* White color when audio is playing */
  }
  

  .box {
    width: 60vmin;
    height: 50vmin;
    display: grid;
    place-content: center;
    color: white;
    text-shadow: 0 1px 0 #000;
    
    --border-angle: 0turn; /* For animation. */
    --main-bg: conic-gradient(
        from var(--border-angle),
        #213,
        #112 5%,
        #112 60%,
        #213 95%
      );
    
    border: solid 5px transparent;
    border-radius: 2em;
    --gradient-border: conic-gradient(from var(--border-angle), transparent 25%, #08f, #f03 99%, transparent);
    
    background:
      var(--main-bg) padding-box,
      var(--gradient-border) border-box,
      var(--main-bg) border-box;
    
    background-position: center center;
  
    animation: bg-spin 3s linear infinite;
  }
  
  @keyframes bg-spin {
    to {
      --border-angle: 1turn;
    }
  }
  
  .box:hover {
    animation-play-state: paused;
  }
  
  @property --border-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
  }
  